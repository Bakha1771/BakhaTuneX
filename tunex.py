import telebot
from yt_dlp import YoutubeDL
import os
import time
from concurrent.futures import ThreadPoolExecutor
import tempfile

TOKEN = "8001415471:AAHuicYryT-O6g-Iitt275XFyEyZ5cGW_Bs"
bot = telebot.TeleBot(TOKEN)
FFMPEG_PATH = r"C:\FFmpeg\bin"

executor = ThreadPoolExecutor(max_workers=5)

ADMIN_ID = 8166301010

def download_mp3(query, chat_id):
    try:
        bot.send_message(chat_id, f"üîç –ò—â—É –≤–∞—à—É –ø–µ—Å–Ω—é: {query}...")
        with tempfile.TemporaryDirectory() as tmpdir:
            ydl_opts = {
                'format': 'bestaudio/best',
                'outtmpl': f'{tmpdir}/%(title)s.%(ext)s',
                'noplaylist': True,
                'quiet': True,
                'ffmpeg_location': FFMPEG_PATH,
                'postprocessors': [{
                    'key': 'FFmpegExtractAudio',
                    'preferredcodec': 'mp3',
                    'preferredquality': '192',
                }],
            }

            with YoutubeDL(ydl_opts) as ydl:
                info = ydl.extract_info(f"ytsearch1:{query}", download=True)
                filename = ydl.prepare_filename(info['entries'][0]).replace(".webm", ".mp3")
                
                time.sleep(1)
                
                bot.send_message(chat_id, f"‚úÖ –ü–µ—Å–Ω—è –≥–æ—Ç–æ–≤–∞: {info['entries'][0]['title']}")
                with open(filename, 'rb') as audio:
                    bot.send_audio(chat_id, audio)
                    
    except Exception as e:
        bot.send_message(chat_id, f"‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {e}")

# --- –ö–æ–º–∞–Ω–¥–∞ /start ---
@bot.message_handler(commands=['start'])
def start(message):
    bot.send_message(
        message.chat.id,
        "üéµ –ü—Ä–∏–≤–µ—Ç! –ù–∞–ø–∏—à–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø–µ—Å–Ω–∏, –∏ —è –ø—Ä–∏—à–ª—é mp3 –ø—Ä—è–º–æ —Å—é–¥–∞ üéß\n\n"
    )

# --- –ö–æ–º–∞–Ω–¥–∞ /about ---
@bot.message_handler(commands=['about'])
def about(message):
    bot.send_message(
        message.chat.id,
        "‚ÑπÔ∏è –≠—Ç–æ—Ç –±–æ—Ç —Å–æ–∑–¥–∞–Ω –¥–ª—è –ø–æ–∏—Å–∫–∞ –∏ –∑–∞–≥—Ä—É–∑–∫–∏ –ø–µ—Å–µ–Ω —Å YouTube –≤ —Ñ–æ—Ä–º–∞—Ç–µ MP3.\n\n"
        "üéß –ü—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø–µ—Å–Ω–∏ ‚Äî –±–æ—Ç –Ω–∞–π–¥—ë—Ç –∏ –æ—Ç–ø—Ä–∞–≤–∏—Ç –µ—ë —Ç–µ–±–µ.\n\n"
        "üë®‚Äçüíª –†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫: @coder_1771"
    )

# --- –§—É–Ω–∫—Ü–∏–∏ –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏ ---
def get_feedback(sms):
    if not sms.text:
        bot.send_message(sms.chat.id, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ç–µ–∫—Å—Ç.")
        return

    user = sms.from_user
    username = user.username or '–ù–µ —É–∫–∞–∑–∞–Ω'
    first_name = user.first_name or ''
    last_name = user.last_name or ''
    feedback = sms.text

    formatted_feedback = (
        f'üÜï –ù–æ–≤—ã–π –æ—Ç–∑—ã–≤\n\n'
        f'üõÇ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å @{username}\n'
        f'üìã –ò–º—è: {first_name} {last_name}\n\n'
        f'‚úçÔ∏è –û—Ç–∑—ã–≤: {feedback}'
    )
    
    bot.send_message(chat_id=ADMIN_ID, text=formatted_feedback)
    bot.send_message(sms.chat.id, "‚úÖ –°–ø–∞—Å–∏–±–æ –∑–∞ –≤–∞—à –æ—Ç–∑—ã–≤!")

@bot.message_handler(commands=['feedback'])
def feedback_handler(sms):
    bot.send_message(
        sms.chat.id,
        "üóí –û—Ç–ø—Ä–∞–≤—å—Ç–µ –≤–∞—à –æ—Ç–∑—ã–≤ –∏–ª–∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ:",
        parse_mode='Markdown'
    )
    bot.register_next_step_handler(sms, get_feedback)

@bot.message_handler(func=lambda m: True)
def handle_message(message):
    query = message.text
    bot.send_message(message.chat.id, f"üöÄ –û–±—Ä–∞–±–∞—Ç—ã–≤–∞—é –≤–∞—à –∑–∞–ø—Ä–æ—Å: {query}")
    executor.submit(download_mp3, query, message.chat.id)

bot.infinity_polling()